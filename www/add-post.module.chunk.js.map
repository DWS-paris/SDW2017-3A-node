{"version":3,"sources":["/Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.component.html","/Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.component.ts","/Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.module.ts","/Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.route.ts"],"names":[],"mappings":"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","file":"add-post.module.chunk.js","sourcesContent":["module.exports = \"<h1>Ajouter un article</h1>\\n\\n<!-- Capter la soumission du formulaire -->\\n<form action=\\\"#\\\" (submit)=\\\"submitForm()\\\" [hidden]=\\\"postCreated\\\">\\n\\n  <label for=\\\"postTitle\\\">\\n    Titre de l'article \\n\\n    <!-- Indication lors de la frappe -->\\n    <span *ngIf=\\\"uniqPostObject.title.length < 5\\\" >Minimum 5 caractères</span>\\n\\n    <!-- Message d'erreur à la validation -->\\n    <span [hidden]=\\\"!errorTitle\\\">Champs Obligatoire</span>\\n\\n  </label>\\n\\n  <!-- \\n    Le ngModel permet de faire le binding dans les deux sens :\\n    ctrl => vue => ctrl\\n  -->\\n  <input \\n    [(ngModel)]=\\\"uniqPostObject.title\\\"\\n    \\n    type=\\\"text\\\" \\n\\n    name=\\\"postTitle\\\"\\n\\n    id=\\\"postTitle\\\" \\n\\n    placeholder=\\\"Définir le titre de l'article\\\"\\n\\n    required=\\\"required\\\"\\n\\n    (focus)=\\\"hideError($event.srcElement.name)\\\"\\n  >\\n\\n\\n  <label for=\\\"postDescription\\\">\\n    Description courte\\n    <span [hidden]=\\\"!errorDescription\\\">Champs Obligatoire</span>\\n  </label>\\n  <textarea [(ngModel)]=\\\"uniqPostObject.description\\\" name=\\\"postDescription\\\" id=\\\"postDescription\\\" placeholder=\\\"Ajouter une description courte\\\" required=\\\"required\\\" (focus)=\\\"hideError($event.srcElement.name)\\\"></textarea>\\n\\n  <label for=\\\"postContent\\\">\\n    Contenu\\n    <span [hidden]=\\\"!errorContent\\\">Champs Obligatoire</span>\\n  </label>\\n  <textarea [(ngModel)]=\\\"uniqPostObject.content\\\" name=\\\"postContent\\\" id=\\\"postContent\\\" placeholder=\\\"Ajouter le contenu de votre post\\\" required=\\\"required\\\" (focus)=\\\"hideError($event.srcElement.name)\\\"></textarea>\\n\\n  <label for=\\\"postCover\\\">\\n    Ajouter une image\\n    <span [hidden]=\\\"!errorCover\\\">Champs Obligatoire</span>\\n  </label>\\n  <input [(ngModel)]=\\\"uniqPostObject.cover\\\" type=\\\"text\\\" id=\\\"postCover\\\" name=\\\"postCover\\\" required=\\\"required\\\" (focus)=\\\"hideError($event.srcElement.name)\\\">\\n  \\n\\n  <button type=\\\"submit\\\">Ajouter</button>\\n\\n</form>\\n\\n<section [hidden]=\\\"!postCreated\\\">\\n  <p>Votre article est créé, cliquez <a routerLink=\\\"/post/{{newPostId}}\\\">ici pour l'afficher</a></p>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.component.html\n// module id = ../../../../../src/app/add-post/add-post.component.html\n// module chunks = add-post.module","import { Component, OnInit } from '@angular/core';\n\n// Importer les classe pour manipuler le formulaire\nimport { FormControl, FormGroup } from '@angular/forms'\n\n// Importer l'interface PostModel\nimport { PostModel } from '../data/post.model'\n\n// Importer le service\nimport { BlogPostsService } from '../services/blog-posts.service'\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html'\n})\nexport class AddPostComponent implements OnInit {\n\n  public uniqPostObject: PostModel\n\n  // Créer des variables pour gérer les erreurs\n  public errorTitle: boolean = false\n  public errorDescription: boolean = false\n  public errorContent: boolean = false\n  public errorCover: boolean = false\n  \n  // Créer une variable pour la validation finale du formulaire\n  public formError: number = 0\n  public postCreated: boolean = false\n\n  // Créer une variable pour récupérer l'id d'un nouveau post\n  public newPostId: number\n\n  constructor(\n    // Instancier le service\n    private myService: BlogPostsService\n  ) \n  { \n    // Ajouter des valeurs vides dans l'objet du formulaire\n    this.uniqPostObject = {\n      title: '', \n      description: '',\n      content: '',\n      cover: ''\n    }\n  }\n\n  // Créer une fonction pour masquer les messages d'erreur\n  public hideError(tag: any): void{\n    \n    switch(tag){\n      case 'postTitle': \n        this.errorTitle = false\n        break\n\n      case 'postDescription': \n        this.errorDescription = false\n        break\n\n      case 'postContent': \n        this.errorContent = false\n        break\n\n      default: \n        this.errorCover = false\n        break\n    }\n  }\n\n  // Création d'une fonction pour la soumission du formulaire\n  public submitForm(): void{\n\n    // Initialiser la variable formError\n    this.formError = 0\n\n    // Vider les message d'erreur à chaque validation\n    this.errorContent = this.errorCover = this.errorDescription = this.errorTitle = false\n    \n    // Vérifier que chacun des paramètres à bien une valeur\n    for( let param in this.uniqPostObject ){\n      \n      // Si la valeur du paramètre est vide\n      if(this.uniqPostObject[param].length == 0){\n\n        // Afficher le bon message d'erreur selon le paramètre\n        switch(param){\n          case 'title':\n            this.errorTitle = true\n\n            // Incrémenter la variable formError\n            this.formError++\n\n            break\n\n          case 'description':\n            this.errorDescription = true\n            // Incrémenter la variable formError\n            this.formError++\n            break\n          \n          case 'content':\n            this.errorContent = true\n            // Incrémenter la variable formError\n            this.formError++\n            break\n\n          default:\n            this.errorCover = true\n            // Incrémenter la variable formError\n            this.formError++\n            break\n        }\n\n      }\n    }\n\n    // Validation finale du formulaire\n    if( this.formError === 0 ){\n      /*\n      Créer un nouveau post dans l'API\n      Vider l'objet utilisé dans le formulaire\n      Soit retourner sur la page d'accueil, soit afficher l'article\n      */\n\n      // Enregistrer le post\n      this.myService.addNewPost(this.uniqPostObject).then(\n        data => {\n          console.log(data)\n          // Réinitialiser l'objet uniqPostObject\n          this.uniqPostObject = {\n            title: '',\n            description: '',\n            content: '',\n            cover: ''\n          }\n\n          // Définir l'id du nouveau post\n          this.newPostId = data.id\n\n          // Changer la variable postCreated\n          this.postCreated = true\n        },\n        \n        error => console.log(error)\n      )\n\n\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\n// Importer les composants\nimport { AddPostComponent } from './add-post.component'\nimport { Routing } from './add-post.route'\n\n@NgModule({\n  declarations: [ AddPostComponent ],\n  imports: [ Routing, CommonModule, FormsModule ]\n})\n\nexport class AddPostModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.module.ts","// Importer les classes pour définir les routes\nimport { ModuleWithProviders } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\n// Importer les composants à utiliser dans les routes\nimport { AddPostComponent } from './add-post.component'\n\n// Créer une constante pour définir le comportement des routes\nconst appRoutes: Routes = [\n    {\n        path: '',\n        component: AddPostComponent\n    }\n]\n\n// Exporter une autre constante pour utiliser les routes\nexport const Routing: ModuleWithProviders = RouterModule.forChild(appRoutes)\n\n\n// WEBPACK FOOTER //\n// /Users/julNY/htdocs/SCHOOLS/sdw/SDW2017/SERVERnode/webApp/src/app/add-post/add-post.route.ts"],"sourceRoot":"webpack:///"}